/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.5/userguide/java_library_plugin.html
 */

buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
    id 'org.ajoberstar' version '2.1.1'
}

group = "com.blackfez"
version = "0.1"

def currentBranch = grgit.branch.current().getName()
def buildnumber = "LOCAL"
def wart = ""

if( System.env.BRANCH_NAME ) {
    currentBranch = System.env.BRANCH_NAME
    buildnumber = System.env.BUILD_NUMBER
}

if( currentBranch != 'master' ) {
    wart = currentBranch + "."
}

version = version + "." + wart + buildnumber

allprojects {
    repositories {
        jcenter()
        maven {
            url "https://dl.bintray.com/nhansen/blackfezjava"
        }
    }
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'application'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
}

// Apply the java-library plugin to add support for Java Library
mainClassName= "com.blackfez.applications.fircbot.Application"

bintray {
    user = System.getenv( 'BINTRAY_USER' )
    key = System.getenv( 'BINTRAY_KEY' )
    configurations = ['archives']
    pkg {
        repo = 'blackfezjava'
        name = 'fircbot'
        userOrg = user
        licenses = ['GPL-3.0']
        vcsUrl = 'https://github.com/n1ckhansen/FircBot.git'
        version {
            name = project.property( "version" )
            released = new Date()
        }
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.google.guava:guava:21.0'
    compile 'com.jayway.jsonpath:json-path:2.4.0'
    compile 'javax.json:javax.json-api:1.1'
    compile 'org.glassfish:javax.json:1.1'
    compile 'pircbot:pircbot:1.5.0'
    compile 'com.google.api-client:google-api-client:1.23.0'
    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    compile 'com.google.apis:google-api-services-youtube:v3-rev192-1.23.0'
    compile 'org.reflections:reflections:0.9.11' 
    compile 'org.twitter4j:twitter4j-core:4.+'
    compile 'com.rometools:rome:1.9.0'
    compile 'com.blackfez:FezCore:0.1.18'
}

task sourcesJar( type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar( type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

def pomConfig = {
    licenses {
        license {
            name "The GNU General Public License v3.0"
            url "http://www.gnu.org/licenses/gpl-3.0.en.txt"
            distribution "blackfezjava"
        }
    }
    developers {
        developer {
            id "n1ckhansen"
            name "Nick Hansen"
            email "nhansen@blackfez.com"
        }
    }
    scm {
        url "https://github.com/n1ckhansen/FircBot"
    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId 'com.blackfez'
            artifactId 'fircbot'
            version project.property( 'version' )
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'IRC bot as personal assistant based on PircBot')
                root.appendNode('name', 'FircBot')
                root.appendNode('url', 'https://github.com/n1ckhansen/fircbot')
                root.children().last() + pomConfig
            }
        }
    }
}
